import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import useAxiosPrivate from '../hooks/useAxiosPrivate';

const Overview = () => {
  const { id } = useParams();
  const axiosPrivate = useAxiosPrivate();

  const [orphanage, setOrphanage] = useState({});
  const [socialWorkerList, setSocialWorkerList] = useState([]);
  const [staffList, setStaffList] = useState([]);
  const [childrenList, setChildrenList] = useState([]);
  const [head, setHead] = useState({});

  useEffect(() => {
    const getOrphanage = async () => {
      try {
        const response = await axiosPrivate.get('/orphanage');
        const selectedOrphanage = response.data.orphanageList.find((orphanage) => orphanage.orphanageid === id);
        setOrphanage(selectedOrphanage);
      } catch (error) {
        console.error('Failed to fetch orphanages:', error);
      }
    };

    const getAllSocialWorkers = async () => {
      try {
        const response = await axiosPrivate.get(`/socialworker/all?orphanageid=${id}`);
        setSocialWorkerList(response.data.socialWorkerList);
      } catch (error) {
        console.error('Failed to fetch social workers:', error);
      }
    };

    const getAllStaff = async () => {
      try {
        const response = await axiosPrivate.get(`/staff/?orphanageid=${id}`);
        setStaffList(response.data.staffList);
      } catch (error) {
        console.error('Failed to fetch staff:', error);
      }
    };

    const getChildren = async () => {
      try {
        const response = await axiosPrivate.get(`/child/orphanage/${id}`);
        setChildrenList(response.data.childrenList);
      } catch (error) {
        console.error('Failed to fetch children:', error);
      }
    };

    const getHead = async () => {
      try {
        const response = await axiosPrivate.get(`/orphanage/head?orphanageid=${id}`);
        setHead(response.data.headDetails);
      } catch (error) {
        console.error('Failed to fetch head:', error);
      }
    };

    getOrphanage();
    getAllSocialWorkers();
    getAllStaff();
    getChildren();
    getHead();
  }, [id, axiosPrivate]);

  return (
    <div className="p-6 bg-gray-100 min-h-screen">
      <div className="space-y-8 mb-8">
        {/* Orphanage Info */}
        <div className="bg-white p-6 rounded-lg shadow-md">
          <h2 className="text-2xl font-semibold mb-4">Orphanage Details</h2>
          <p><strong>Name:</strong> {orphanage.orphanagename}</p>
          <p><strong>Address:</strong> {orphanage.address}</p>
          <p><strong>Phone:</strong> {orphanage.telno}</p>
        </div>

        {/* Head Details */}
        <div className="bg-white p-6 rounded-lg shadow-md">
          <h2 className="text-2xl font-semibold mb-4">Head Details</h2>
          <p><strong>Name:</strong> {head.username}</p>
          <p><strong>Email:</strong> {head.email}</p>
          <p><strong>Phone:</strong> {head.telno}</p>
        </div>

        {/* Number of Children */}
        <div className="bg-white p-6 rounded-lg shadow-md">
          <h2 className="text-2xl font-semibold mb-4">Number of Children</h2>
          <p className="text-4xl font-bold">{childrenList.length}</p>
        </div>
      </div>

      <div className="space-y-8">
        {/* Social Workers List */}
        <div className="bg-white p-6 rounded-lg shadow-md">
          <h2 className="text-2xl font-semibold mb-4">Social Workers</h2>
          {socialWorkerList.length > 0 ? (
            socialWorkerList.map((sw) => (
              <div key={sw.id} className="mb-4">
                <p><strong>Phone:</strong> {sw.telno}</p>
                <p><strong>Email:</strong> {sw.email}</p>
                <p><strong>Username:</strong> {sw.username}</p>
              </div>
            ))
          ) : (
            <p>No social workers found.</p>
          )}
        </div>

        {/* Staff List */}
        <div className="bg-white p-6 rounded-lg shadow-md">
          <h2 className="text-2xl font-semibold mb-4">Staff</h2>
          {staffList.length > 0 ? (
            staffList.map((s) => (
              <div key={s.staffid} className="mb-4">
                <p><strong>Phone:</strong> {s.telno}</p>
                <p><strong>Email:</strong> {s.email}</p>
                <p><strong>Username:</strong> {s.username}</p>
              </div>
            ))
          ) : (
            <p>No staff found.</p>
          )}
        </div>
      </div>
    </div>
  );
};

export default Overview;
