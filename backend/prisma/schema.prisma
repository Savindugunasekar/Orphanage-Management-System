generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model child {
  childid            String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  orphanageid        String?      @db.Uuid
  name               String?      @db.VarChar(100)
  date_of_birth      DateTime?    @db.Date
  gender             gender_type?
  nationality        String?      @db.VarChar(10)
  religion           String?      @db.VarChar(10)
  medicaldetails     String?
  educationaldetails String?
  orphanage          orphanage?   @relation(fields: [orphanageid], references: [orphanageid], onDelete: NoAction, onUpdate: NoAction)
}

model orphanage {
  orphanageid   String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  headid        String?        @db.Uuid
  orphanagename String         @db.VarChar(50)
  address       String?        @db.VarChar(255)
  telno         Int?
  head_email    String         @db.VarChar(255)
  capacity      Int?
  district      String?        @db.VarChar(50)
  child         child[]
  users         users?         @relation(fields: [headid], references: [userid], onDelete: NoAction, onUpdate: NoAction)
  socialworker  socialworker[] @ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model socialworker {
  socialworkerid String?    @db.Uuid
  orphanageid    String?    @db.Uuid
  orphanage      orphanage? @relation(fields: [orphanageid], references: [orphanageid], onDelete: NoAction, onUpdate: NoAction)
  users          users?     @relation(fields: [socialworkerid], references: [userid], onDelete: NoAction, onUpdate: NoAction)

  @@ignore
}

model users {
  userid       String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  username     String?        @unique @db.VarChar(50)
  password     String?        @unique @db.VarChar(255)
  email        String         @unique @db.VarChar(100)
  roles        Json?
  telno        Int?
  refreshtoken String?
  verifytoken  String?
  verified     Boolean?       @default(false)
  orphanage    orphanage[]
  socialworker socialworker[] @ignore
}

enum gender_type {
  Male
  Female
}
